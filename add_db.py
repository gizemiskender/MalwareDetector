from pymongo import MongoClient
from constants import DB_NAME
from core import extract_features
import multiprocessing
import sys
import os

DATA_TYPE = None


def call_and_add(fname):
    global DATA_TYPE
    try:
        print '[*] Feature Extracting: {}'.format(fname)
        result = extract_features(fname)
        print '[*] Adding to db: {}'.format(fname)
        client = MongoClient()
        db = client[DB_NAME]
        result['data_type'] = DATA_TYPE
        db['apk'].update({'sha256': result['sha256']}, result, upsert=True)
    except Exception as e:
        print '[!] Error occured with {}, {}'.format(fname, e)


def perform_analysis(d, n, t):
    global DATA_TYPE
    DATA_TYPE = t
    pool = multiprocessing.Pool(n)
    file_names = []
    for root, dirs, files in os.walk(d):
        for name in files:
            file_name = os.path.join(root, name)
            file_names.append(file_name)
    pool.map(call_and_add, file_names)
    pool.close()
    pool.join()

if __name__ == '__main__':
    if len(sys.argv) > 3:
        dir_path = sys.argv[1]
        p_num = int(sys.argv[2])
        data_type = sys.argv[3]
        if data_type not in ('goodware', 'malware'):
            print '[+] You should use goodware or malware as data type'
        else:
            perform_analysis(dir_path, p_num, data_type)
    else:
        print '[+] Usage: python {} <dir_path> <process> <data_type>'.format(__file__)
